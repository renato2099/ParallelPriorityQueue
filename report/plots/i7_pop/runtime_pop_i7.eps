%!PS-Adobe-2.0 EPSF-2.0
%%Title: runtime_pop_i7.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Mon Jan 12 10:26:25 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (runtime_pop_i7.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (dasidler)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 12 10:26:25 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
602 448 M
63 0 V
6282 0 R
-63 0 V
518 448 M
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
602 1333 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 5) Rshow
1.000 UL
LTb
LCb setrgbcolor
602 2217 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 10) Rshow
1.000 UL
LTb
LCb setrgbcolor
602 3102 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 15) Rshow
1.000 UL
LTb
LCb setrgbcolor
602 3986 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 20) Rshow
1.000 UL
LTb
LCb setrgbcolor
602 4871 M
63 0 V
6282 0 R
-63 0 V
-6366 0 R
( 25) Rshow
1.000 UL
LTb
LCb setrgbcolor
628 448 M
0 63 V
0 4360 R
0 -63 V
628 308 M
(1) Cshow
1.000 UL
LTb
LCb setrgbcolor
1131 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(20) Cshow
1.000 UL
LTb
LCb setrgbcolor
1660 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(40) Cshow
1.000 UL
LTb
LCb setrgbcolor
2188 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(60) Cshow
1.000 UL
LTb
LCb setrgbcolor
2717 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(80) Cshow
1.000 UL
LTb
LCb setrgbcolor
3246 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(100) Cshow
1.000 UL
LTb
LCb setrgbcolor
3775 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(120) Cshow
1.000 UL
LTb
LCb setrgbcolor
4303 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(140) Cshow
1.000 UL
LTb
LCb setrgbcolor
4832 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(160) Cshow
1.000 UL
LTb
LCb setrgbcolor
5361 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(180) Cshow
1.000 UL
LTb
LCb setrgbcolor
5890 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(200) Cshow
1.000 UL
LTb
LCb setrgbcolor
6418 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(220) Cshow
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
0 4360 R
0 -63 V
0 -4500 R
(240) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
602 4871 N
602 448 L
6345 0 V
0 4423 V
-6345 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(Time [s]) Cshow
grestore
LTb
LCb setrgbcolor
3774 98 M
(# Threads) Cshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
1.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
6296 4738 M
(std::pq) Rshow
LT0
6380 4738 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
628 448 M
503 22 V
529 41 V
528 25 V
529 36 V
529 21 V
529 50 V
528 24 V
529 47 V
529 32 V
529 29 V
528 18 V
529 58 V
628 448 M
-26 0 R
57 0 V
-57 0 R
57 0 V
472 21 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
498 32 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
497 11 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
498 29 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
498 13 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
498 33 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
497 3 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
498 21 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
498 5 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
498 17 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
497 7 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
498 31 R
0 39 V
-31 -39 R
31 0 V
-31 39 R
31 0 V
628 448 Pls
1131 470 Pls
1660 511 Pls
2188 536 Pls
2717 572 Pls
3246 593 Pls
3775 643 Pls
4303 667 Pls
4832 714 Pls
5361 746 Pls
5890 775 Pls
6418 793 Pls
6947 851 Pls
6579 4738 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
6296 4598 M
(tbb:cpq) Rshow
LT1
6380 4598 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
628 448 M
503 53 V
529 237 V
528 418 V
529 58 V
529 112 V
529 504 V
528 179 V
529 -194 V
529 693 V
529 494 V
528 73 V
529 1405 V
628 448 M
-26 0 R
57 0 V
-57 0 R
57 0 V
472 37 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
498 194 R
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
497 349 R
0 84 V
-31 -84 R
62 0 V
-62 84 R
62 0 V
498 -62 R
0 156 V
-31 -156 R
62 0 V
-62 156 R
62 0 V
498 -86 R
0 240 V
-31 -240 R
62 0 V
-62 240 R
62 0 V
498 232 R
0 304 V
-31 -304 R
62 0 V
-62 304 R
62 0 V
497 -111 R
0 275 V
-31 -275 R
62 0 V
-62 275 R
62 0 V
498 -400 R
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
498 246 R
0 758 V
-31 -758 R
62 0 V
-62 758 R
62 0 V
498 -108 R
0 446 V
-31 -446 R
62 0 V
-62 446 R
62 0 V
497 -464 R
0 628 V
-31 -628 R
62 0 V
-62 628 R
62 0 V
498 608 R
0 874 V
-31 -874 R
31 0 V
628 448 Crs
1131 501 Crs
1660 738 Crs
2188 1156 Crs
2717 1214 Crs
3246 1326 Crs
3775 1830 Crs
4303 2009 Crs
4832 1815 Crs
5361 2508 Crs
5890 3002 Crs
6418 3075 Crs
6947 4480 Crs
6579 4598 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
6296 4458 M
(Lock-based) Rshow
LT2
6380 4458 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
628 448 M
503 17 V
529 28 V
528 21 V
529 27 V
529 29 V
529 31 V
528 26 V
529 32 V
529 25 V
529 24 V
528 31 V
529 44 V
628 448 M
-26 0 R
57 0 V
-57 0 R
57 0 V
472 15 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
498 22 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
497 11 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
498 15 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
498 17 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
498 20 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
497 15 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
498 13 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
498 4 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
498 2 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
497 9 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
498 23 R
0 20 V
-31 -20 R
31 0 V
-31 20 R
31 0 V
628 448 Star
1131 465 Star
1660 493 Star
2188 514 Star
2717 541 Star
3246 570 Star
3775 601 Star
4303 627 Star
4832 659 Star
5361 684 Star
5890 708 Star
6418 739 Star
6947 783 Star
6579 4458 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LT3
LC3 setrgbcolor
LCb setrgbcolor
6296 4318 M
(Lock-free) Rshow
LT3
6380 4318 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
628 448 M
503 6 V
529 7 V
528 7 V
529 8 V
529 4 V
529 10 V
528 8 V
529 2 V
529 12 V
529 -2 V
528 17 V
529 -5 V
628 448 M
-26 0 R
57 0 V
-57 0 R
57 0 V
472 6 R
-31 0 R
62 0 V
-62 0 R
62 0 V
498 7 R
-31 0 R
62 0 V
-62 0 R
62 0 V
497 7 R
-31 0 R
62 0 V
-62 0 R
62 0 V
498 8 R
-31 0 R
62 0 V
-62 0 R
62 0 V
498 4 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
498 9 R
-31 0 R
62 0 V
-62 0 R
62 0 V
497 7 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
498 2 R
-31 0 R
62 0 V
-62 0 R
62 0 V
498 12 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
498 -4 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
497 17 R
-31 0 R
62 0 V
-62 0 R
62 0 V
498 -5 R
0 1 V
-31 -1 R
31 0 V
-31 1 R
31 0 V
628 448 Box
1131 454 Box
1660 461 Box
2188 468 Box
2717 476 Box
3246 480 Box
3775 490 Box
4303 498 Box
4832 500 Box
5361 512 Box
5890 510 Box
6418 527 Box
6947 522 Box
6579 4318 Box
% End plot #4
1.000 UL
LTb
LCb setrgbcolor
602 4871 N
602 448 L
6345 0 V
0 4423 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
